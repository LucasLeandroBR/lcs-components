@import "./variables.scss";
@import "../breakpoints/variables.scss";
@import "../breakpoints/mixin.scss";

.lcs-container {
    max-width: 100%;
    flex: 1 1 100%;
    margin: auto;
    width: 100%;

    &.no-gutter .lcs-row .lcs-column {
        padding-left: 0px !important;
        padding-right: 0px !important;
    }

    .lcs-row {
        display: flex;
        flex-wrap: wrap;

        .lcs-column {
            display: flex;
            flex: 0 0 100%;
            width: 100%;

            $m: $grid-columns;
            @while $m > 0 {
                &.col-#{$m} {
                    flex: 0 0 calc(((100% / var(--grid-columns)) * #{$m}));
                    max-width: calc(((100% / var(--grid-columns)) * #{$m}));
                    padding-right: calc(var(--grid-gutter) / 2);
                    padding-left: calc(var(--grid-gutter) / 2);
                }
                $m: $m - 1;
            }

            $n: $grid-columns;
            @while $n > 0 {
                @each $name, $size in $breakpoints {
                    @include respond-from(#{$name}) {
                        &.col-#{$name}-#{$n} {
                            flex: 0 0 calc(((100% / var(--grid-columns)) * #{$n}));
                            max-width: calc(((100% / var(--grid-columns)) * #{$n}));
                            padding-right: calc(var(--grid-gutter) / 2);
                            padding-left: calc(var(--grid-gutter) / 2);
                        }
                    }
                }
                $n: $n - 1;
            }
        }
    }
}
